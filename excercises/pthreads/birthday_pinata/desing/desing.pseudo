procedure main(argc, argv[])
  shared position := 0
  shared can_access_position := create_mutex()
  shared thread_count := integer(argv[1])
  shared pinata_count := integer(argv[2])

  private hit_count := 0; //

  for thread_number := 0 to thread_count do
    create_thread(greet, thread_number) // thread team
  end for
end procedure

procedure race(thread_number)
  lock(can_access_position)
  position := position + 1
  declare my_position := position

  for (i = 0; i < shared_data->pinata_count; i++) {
    if (i == shared_data->pinata_count) {
      print "Thread: ", thread_number, "/", thread_count ": My hit num: ",
      private hit_count, "I broke the pinata"
    } else {
      print "Thread: ", thread_number, "/", thread_count ": My hit num: ",
        private hit_count;
        private hit_count++;
    }
  }
  unlock(can_access_position)
end procedure