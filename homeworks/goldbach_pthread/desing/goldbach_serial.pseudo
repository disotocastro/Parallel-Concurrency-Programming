int main (argc, argv) {
  analizar_argumentos(argc, argv);

  datos_compartidos = crear_datos_compartidos();
  array_usuario = leer_input_usuario(input_usuario);

  input_mas_grande = elemento_mas_grande_array(array_usuario)
  array_numeros_primos = trial_division(array_usuario, input_mas_grande)

  crear_hilos(datos_compartidos)
  Goldbach(array_usuario, array_numeros_primos)

}

crear_hilos(datos_compartidos) {
  sem_init;
  datos_privados = crear_datos_privados();
  
  for (i = 0; i < numero_hilos.lenght(); i++) {
    crear_hilos_phread(threads[i], datos_privados[i]);
  }
}

run() {
  thread_index = 0;

  while (1) {
    mutex_lock(mutex);
      // Se obtiene el indice actual del hilo
      thread_index = posicion_del_hilo;
      // Se incrementa para decir que este hilo ya ha sido tomado
      posicion_del_hilo++;
    mutex_unlock;

    // Condicion de parada
    // Si el índice del hilo supera o es igual al número total de tareas 
    if (thread_index >= arr_input.lenght()) {
      break;
    }

    formula_impresion = sem_can_print [(thread_index + 1) % 
                                       (datos_compartidos->arr_input.lenght()])
                          
    goldbach(thread_index, arr_input, arr_prime_num, 
             sem_can_print[thread_index], formula_impresion);
  }
  return NULL;
}

elemento_mas_grande_array(array_usuario) {
  numero_mas_grande = 0
  for (i = 0; i < array_usuario.lenght(); i++) {
    numero_actual = array_usuario[i]
    if (numero_actual > numero_mas_grande y numero_actual <= MAXINT64) {
      numero_mas_grande = numero_actual
    }
  }
  return numero_mas_grande;
}

Goldbach(array_usuario, array_numeros_primos) {

  for (main_index; main_index < array_usuario.lenght() ) {
    if (5 < numero_actual < TamañoMaximoINT64) {
      if (numero_actual % 2 == 0) {
        Llamar goldbach_par(array_usuario, array_numeros_primos, main_index)
      } else {
        Llamar goldbach_impar(array_usuario, array_numeros_primos, main_index)
      }
    } else {
      sem_wait();
      Imprimir "NA" // 0, 1 , 2, 3, 4, 5
      sem_post();
    }
  }
}

goldbach_par(array_usuario, array_numeros_primos, main_index) {
  numero_acutal = array_usuario->elementos[main_index]

  for (i = 0; i < array_usuario.lenght(); i++) {
    for (j = i; j < array_usuario.lenght(); j++) {

      if (primo_1 != 0 and primo_2 != 0) {
        if (primo_1 + primo_2 == numero_acutal) {
          // Caso impresion de sumas
          if (numero_acutal < 0) {
            array.push(primo_1)
            array.push(primo_2)
          }
        }
      }
    }
  }
  sem_wait();
  Llamar rutina_impresion_par();
  sem_post();
}

goldbach_impar(array_usuario, array_numeros_primos, main_index) {
  numero_acutal = array_usuario->elementos[main_index]

  for (i = 0; i < array_usuario.lenght(); i++) {
    for (j = i; j < array_usuario.lenght(); j++) {
      for (k = j; k < array_usuario.lenght(); k++) {
        if (primo_1 != 0 and primo_2 != 0 and primo_3 != 0) {
          if (primo_1 + primo_2 + primo_3 == numero_acutal) {
            // Caso impresion de sumas
            if (numero_acutal < 0) {
              array.push(primo_1)
              array.push(primo_2)
              array.push(primo_3)
            }
          }
        }
      }
    }
  }
  sem_wait();
  Llamar rutina_impresion_impar();
  sem_post();
}